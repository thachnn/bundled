12:05 PM 11/19/2023
---

git clean -fdxn

git tag -f xxx-1.0


3:23 PM 11/19/2023
---

^\/\/ \d+\nfunction\b.*\{(?!\s*(['"]use strict['"];?$|module\.exports = (require|JSON\.parse)\())

^(\}(,|\(\[) function\(.*\) \{)\n  "use strict";$


11:41 AM 11/21/2023
---

[\[,] ,|__webpack_require__\.[a-z]|_WEBPACK_|webpackPoly|\b_(iterator|interop|loop|len|to(Array|Consum)|slice|typeof|extend|createClass|classCall)

/^(function\(module,exports),(__webpack_require__)\)(?!.*\b\2\b)/gm   -> $1\)
/^(function\(module),(exports)\)(?!.*(\b\2\.|=\2\b))/gm


8:45 PM 11/23/2023
---

* Unicode in bundled .js  [^\n -~]  \u00 -> \xFF  \v

* Arrow funcs   /([?:] |\()function (\([^()]*\)) \{\s*return ([^\n{};]*);?\s*\}/  -> $1$2 => $3

* Join vars     /^( *)(const|let|var)( .*);(\n+\1)\2( .*[;,])$(?!\n+\1\2 .*[;,]$)/  -> $1$2$3,$4 $5

* Redundant     / return .*\([\w$]+ = /

* Named anon funcs  /(\S *)\b(function )[\w$]+/

* Simple block  /\b(if|else|for|while)( .*?)\{(\n[^\n{};]+;?)((\n) *\}\n(?= *\})|(\n *)\} *)/   -> $1$2$3$5$6

* Revert `if`   /^( *)(\S.*) && \(([\w.$\[\]]+ [<>*/+-]*= [^\n;]*)\);$/ -> $1if \($2\) $3;

* var indent    /^( *)\S.*(,\n\1  \S.*)*\n\1 {4,}/

* Collapse vars   /\n( *)((?:[\w$]+, )*[\w$]+)(,\n\1[\w$]+ =)/ -> ' $2$3'

* Revert `while`  / for \(; ([^\n;]*); \)/  -> ' while \($1\)'


10:00 AM 11/25/2023
---

node node_modules/webpack/bin/decomment --allowHashBang --keep "(^#!|^\s*[@#]__|^[*\s]*!\s*\S|(^|\n)[*\s]*@(preserve|lic(ense)?|cc_on|CC_ON)\b)" --ecma2023 -i dist/lib/cli.js

* Browser compatibility

for...of            38  12    13  25    7       0.12
Promise.all         32  12    29  19    8       0.12
Map/Set([])         38  12    13  25    9       0.12
Math.isInteger      34  12    16  21    9       0.12
Array.findIndex     45  12    25  32    8       4.0
Array.from          45  12    32  32    9       4.0
Object.assign       45  12    34  32    9       4.0
=>                  45  12    22  32    10      4.0

{ [x]: computed }   47  12    34  34    8       4.0
{ shorthand }                 33        9
{ method() {} }                         9
String.includes     41  12    40  28    9       4.0
...[]               46  12    16  37    8       5.0
(...args)                     27
const               21  12    36  9     5.1     6.0       (let, const, function, class) supported in 'use strict'
let                 49  14    44  17    10      6.0
class               49  13    45  36    10.1    6.0

[] = [] / {} = {}   49  14    41  36    8       6.0
[, ...rest] = []        16              9.1
Array.includes      47  14    43  34    9       6.0
(a = default)       49  14    15  36    10      6.0
({} = default)                41
Object.entries      54  14    47  41    10.1    7.0
async/await         55  15    52  42    10.1    7.6
...{}               60  79    55  47    11.1    8.3
{, ...rest} = {}    60  79    55  47    11.1    8.3


6:04 PM 10/2/2024
---

* Optimization
  /\.indexOf\b.*[!=]=+\s*-1\b/  /-1\s*[!=]=+.*\.indexOf\b/
  /\.length\s*!=+\s*0\b/   /\b0\s*!=+.*\.length\b/


